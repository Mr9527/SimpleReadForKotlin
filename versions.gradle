/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]
versions.arch_core = "1.1.1"
versions.room = "2.0.0"
versions.lifecycle = "1.1.1"
versions.support = "28.0.0"
versions.dagger = "2.20"
versions.junit = "4.12"
versions.espresso = "3.0.1"
versions.retrofit = "2.3.0"
versions.okhttp_logging_interceptor = "3.9.0"
versions.mockwebserver = "3.8.1"
versions.apache_commons = "2.5"
versions.mockito = "2.7.19"
versions.mockito_all = "1.10.19"
versions.dexmaker = "2.2.0"
versions.constraint_layout = "1.1.3"
versions.glide = "4.8.0"
versions.timber = "4.5.1"
versions.android_gradle_plugin = '3.3.0'
versions.rxjava2 = "2.2.4"
versions.rx_android = "2.1.0"
versions.rx_kotlin = "2.2.0"
versions.atsl_runner = "1.0.1"
versions.atsl_rules = "1.0.1"
versions.hamcrest = "1.3"
versions.kotlin = "1.3.11"
versions.paging = "1.0.1"
versions.work = "1.0.0-alpha05"
versions.navigation = "1.0.0-alpha04"
versions.map_version = "5.2.0"
versions.location_version = "4.0.1"
versions.refresh = "1.1.0-alpha-4"
versions.zixing_lib = "2.2"
versions.status_bar = "2.3.0"
versions.permissions = "1.2.0"
versions.superText = "2.1.7"
versions.coreKtx = "1.0.0-alpha1"
versions.compat = "1.0.0"
versions.adapterHelper = "2.9.41"
versions.loading_dialog = "v1.0.4"
versions.shape = "1.2.3"
versions.component = "1.3.3"
versions.gson = "2.8.5"
versions.kodein = "5.2.0"
versions.autodispose = "1.1.0"
versions.permissions = "0.10.2"
versions.kotlin_coroutines = "1.1.0"
versions.url_manager = "1.1.0"
versions.auto_service = "1.0-rc4"
versions.databinding = "3.3.0"
versions.rx_lifecycle = "3.0.0"
versions.router_api = "1.4.1"
versions.router_compiler = "1.2.2"
def deps = [:]

def support = [:]
support.annotations = "com.android.support:support-annotations:$versions.support"
support.app_compat = "com.android.support:appcompat-v7:$versions.support"
support.compat = "androidx.appcompat:appcompat:$versions.compat"
support.recyclerview = "com.android.support:recyclerview-v7:$versions.support"
support.cardview = "com.android.support:cardview-v7:$versions.support"
support.design = "com.android.support:design:$versions.support"
support.v4 = "com.android.support:support-v4:$versions.support"
support.core_utils = "com.android.support:support-core-utils:$versions.support"
support.databinding = "androidx.databinding:databinding-runtime:$versions.databinding"
deps.support = support

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "android.arch.core:core-testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "android.arch.lifecycle:runtime:$versions.lifecycle"
lifecycle.extensions = "android.arch.lifecycle:extensions:$versions.lifecycle"
lifecycle.java8 = "android.arch.lifecycle:common-java8:$versions.lifecycle"
lifecycle.compiler = "android.arch.lifecycle:compiler:$versions.lifecycle"
lifecycle.livedata = "android.arch.lifecycle:livedata:$versions.lifecycle"
lifecycle.viewmodel = "android.arch.lifecycle:viewmodel:$versions.lifecycle"
lifecycle.reactivestreams = "android.arch.lifecycle:reactivestreams:$versions.lifecycle"
deps.lifecycle = lifecycle

def arch_core = [:]
arch_core.testing = "android.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
retrofit.rx_adapter = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.url_manager = "me.jessyan:retrofit-url-manager:$versions.url_manager"
deps.retrofit = retrofit



def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"

deps.dagger = dagger

def espresso = [:]
espresso.core = "com.android.support.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "com.android.support.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "com.android.support.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def atsl = [:]
atsl.runner = "com.android.support.test:runner:$versions.atsl_runner"
atsl.rules = "com.android.support.test:rules:$versions.atsl_runner"
deps.atsl = atsl

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
deps.mockito = mockito

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
kotlin.coroutines_android = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlin_coroutines"
kotlin.coroutines = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlin_coroutines"

deps.kotlin = kotlin
deps.paging = "android.arch.paging:runtime:$versions.paging"

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

def data = [:]
data.gson = "com.google.code.gson:gson:$versions.gson"
data.service = "com.google.auto.service:auto-service:$versions.auto_service"
deps.data = data

deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.junit = "junit:junit:$versions.junit"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.zixing_ext = "cn.yipianfengye.android:zxing-library:$versions.zixing_lib"
deps.status_bar = "com.gyf.barlibrary:barlibrary:$versions.status_bar"
deps.permissions = "pub.devrel:easypermissions:$versions.permissions"
deps.coreKtx = "androidx.core:core-ktx:$versions.coreKtx"
deps.socket = "com.github.vilyever:AndroidSocketClient:$versions.socket"
deps.adapterHelper = "com.github.CymChad:BaseRecyclerViewAdapterHelper:$versions.adapterHelper"
deps.shape = "com.noober.background:core:$versions.shape"
deps.component = "com.github.jimu:build-gradle:$versions.component"
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"
deps.componentlib = "com.github.jimu:componentlib:$versions.component"
ext.deps = deps



def build_versions = [:]
build_versions.min_sdk = 19
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
build_versions.code = 22
build_versions.name = "2.1.0"
ext.build_versions = build_versions

def work = [:]
work.runtime = "android.arch.work:work-runtime:$versions.work"
work.testing = "android.arch.work:work-testing:$versions.work"
work.firebase = "android.arch.work:work-firebase:$versions.work"
work.runtime_ktx = "android.arch.work:work-runtime-ktx:$versions.work"
deps.work = work

def navigation = [:]
navigation.runtime = "android.arch.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "android.arch.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "android.arch.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "android.arch.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.safe_args_plugin = "android.arch.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
navigation.testing_ktx = "android.arch.navigation:navigation-testing-ktx:$versions.navigation"
deps.navigation = navigation

def map = [:]
map.two_dimension = "com.amap.api:map2d:$versions.map_version"
map.location = "com.amap.api:location:$versions.location_version"
deps.map = map

def refresh = [:]
refresh.layout = "com.scwang.smartrefresh:SmartRefreshLayout:$versions.refresh"
refresh.header = "com.scwang.smartrefresh:SmartRefreshHeader:$versions.refresh"
deps.refresh = refresh

def kodein = [:]
kodein.jvm = "org.kodein.di:kodein-di-generic-jvm:$versions.kodein"
kodein.core = "org.kodein.di:kodein-di-framework-android-core:$versions.kodein"
kodein.androidx = "org.kodein.di:kodein-di-framework-android-x:$versions.kodein"
deps.kodein = kodein

def autodispose = [:]
autodispose.core = "com.uber.autodispose:autodispose-android:$versions.autodispose"
autodispose.ktx = "com.uber.autodispose:autodispose-ktx:$versions.autodispose"
autodispose.android_ktx = "com.uber.autodispose:autodispose-android-ktx:$versions.autodispose"
autodispose.archs_ktx = "com.uber.autodispose:autodispose-android-archcomponents-ktx:$versions.autodispose"
deps.autodispose = autodispose

def rx = [:]
rx.core = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
rx.android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
rx.kotlin = "io.reactivex.rxjava2:rxkotlin:$versions.rx_kotlin"
rx.permissions = "com.github.tbruyelle:rxpermissions:$versions.permissions"
rx.lifecycle_core = "com.trello.rxlifecycle3:rxlifecycle:$versions.rx_lifecycle"
rx.lifecycle_android = "com.trello.rxlifecycle3:rxlifecycle-android:$versions.rx_lifecycle"
rx.lifecycle_android_provider = "com.trello.rxlifecycle3:rxlifecycle-android-lifecycle:$versions.rx_lifecycle"
rx.lifecycle_kotlin = "com.trello.rxlifecycle3:rxlifecycle-android-lifecycle-kotlin:$versions.rx_lifecycle"
deps.rx = rx

def router = [:]
router.api = "com.alibaba:arouter-api:$versions.router_api"
router.compiler = "com.alibaba:arouter-compiler:$versions.router_compiler"
deps.router = router


ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.mavenCentral()
    handler.maven { url uri('./local_repo') }
    handler.maven { url "https://jitpack.io" }
    handler.flatDir {
        dirs '../componentrelease' //this way we can find the .aar file in  folder
    }
}

ext.addRepos = this.&addRepos
